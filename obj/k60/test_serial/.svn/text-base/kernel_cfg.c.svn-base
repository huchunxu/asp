/* kernel_cfg.c */
#include "kernel/kernel_int.h"
#include "kernel_cfg.h"

#ifndef TOPPERS_EMPTY_LABEL
#define TOPPERS_EMPTY_LABEL(x,y) x y[0]
#endif

#if TKERNEL_PRID != 0x07u
#error "The kernel does not match this configuration file."
#endif

/*
 *  Include Directives (#include)
 */

#include "syssvc/syslog.h"
#include "syssvc/banner.h"
#include "target_syssvc.h"
#include "target_serial.h"
#include "syssvc/serial.h"
#include "syssvc/logtask.h"
#include "test_serial.h"

/*
 *  Default Definitions of Trace Log Macros
 */

#ifndef LOG_ISR_ENTER
#define LOG_ISR_ENTER(intno)
#endif /* LOG_ISR_ENTER */

#ifndef LOG_ISR_LEAVE
#define LOG_ISR_LEAVE(intno)
#endif /* LOG_ISR_LEAVE */

/*
 *  Task Management Functions
 */

const ID _kernel_tmax_tskid = (TMIN_TSKID + TNUM_TSKID - 1);

static STK_T _kernel_stack_LOGTASK[COUNT_STK_T(LOGTASK_STACK_SIZE)];
static STK_T _kernel_stack_TASK1[COUNT_STK_T(STACK_SIZE)];
static STK_T _kernel_stack_TASK2[COUNT_STK_T(STACK_SIZE)];

const TINIB _kernel_tinib_table[TNUM_TSKID] = {
	{ (TA_ACT), (intptr_t)(LOGTASK_PORTID), (logtask_main), INT_PRIORITY(LOGTASK_PRIORITY), ROUND_STK_T(LOGTASK_STACK_SIZE), (_kernel_stack_LOGTASK), (TA_NULL), (NULL) },
	{ (TA_ACT), (intptr_t)(1), (task1), INT_PRIORITY(HIGH_PRIORITY), ROUND_STK_T(STACK_SIZE), (_kernel_stack_TASK1), (TA_NULL), (NULL) },
	{ (TA_ACT), (intptr_t)(2), (task2), INT_PRIORITY(MID_PRIORITY), ROUND_STK_T(STACK_SIZE), (_kernel_stack_TASK2), (TA_NULL), (NULL) }
};

TCB _kernel_tcb_table[TNUM_TSKID];

const ID _kernel_torder_table[TNUM_TSKID] = {
	LOGTASK, TASK1, TASK2
};

/*
 *  Semaphore Functions
 */

const ID _kernel_tmax_semid = (TMIN_SEMID + TNUM_SEMID - 1);

const SEMINIB _kernel_seminib_table[TNUM_SEMID] = {
	{ (TA_TPRI), (0), (1) },
	{ (TA_TPRI), (1), (1) }
};

SEMCB _kernel_semcb_table[TNUM_SEMID];

/*
 *  Eventflag Functions
 */

const ID _kernel_tmax_flgid = (TMIN_FLGID + TNUM_FLGID - 1);

TOPPERS_EMPTY_LABEL(const FLGINIB, _kernel_flginib_table);
TOPPERS_EMPTY_LABEL(FLGCB, _kernel_flgcb_table);

/*
 *  Dataqueue Functions
 */

const ID _kernel_tmax_dtqid = (TMIN_DTQID + TNUM_DTQID - 1);

TOPPERS_EMPTY_LABEL(const DTQINIB, _kernel_dtqinib_table);
TOPPERS_EMPTY_LABEL(DTQCB, _kernel_dtqcb_table);

/*
 *  Priority Dataqueue Functions
 */

const ID _kernel_tmax_pdqid = (TMIN_PDQID + TNUM_PDQID - 1);

TOPPERS_EMPTY_LABEL(const PDQINIB, _kernel_pdqinib_table);
TOPPERS_EMPTY_LABEL(PDQCB, _kernel_pdqcb_table);

/*
 *  Mailbox Functions
 */

const ID _kernel_tmax_mbxid = (TMIN_MBXID + TNUM_MBXID - 1);

TOPPERS_EMPTY_LABEL(const MBXINIB, _kernel_mbxinib_table);
TOPPERS_EMPTY_LABEL(MBXCB, _kernel_mbxcb_table);

/*
 *  Fixed-sized Memorypool Functions
 */

const ID _kernel_tmax_mpfid = (TMIN_MPFID + TNUM_MPFID - 1);

TOPPERS_EMPTY_LABEL(const MPFINIB, _kernel_mpfinib_table);
TOPPERS_EMPTY_LABEL(MPFCB, _kernel_mpfcb_table);

/*
 *  Cyclic Handler Functions
 */

const ID _kernel_tmax_cycid = (TMIN_CYCID + TNUM_CYCID - 1);

TOPPERS_EMPTY_LABEL(const CYCINIB, _kernel_cycinib_table);
TOPPERS_EMPTY_LABEL(CYCCB, _kernel_cyccb_table);

/*
 *  Alarm Handler Functions
 */

const ID _kernel_tmax_almid = (TMIN_ALMID + TNUM_ALMID - 1);

TOPPERS_EMPTY_LABEL(const ALMINIB, _kernel_alminib_table);
TOPPERS_EMPTY_LABEL(ALMCB, _kernel_almcb_table);

/*
 *  Interrupt Management Functions
 */

void
_kernel_inthdr_69(void)
{
	i_begin_int(69);
	LOG_ISR_ENTER(69);
	sio_isr((intptr_t)(SIO_PORTID));
	LOG_ISR_LEAVE(69);
	i_end_int(69);
}

#define TNUM_INHNO	1
const uint_t _kernel_tnum_inhno = TNUM_INHNO;

INTHDR_ENTRY(69, 69, _kernel_inthdr_69)

const INHINIB _kernel_inhinib_table[TNUM_INHNO] = {
	{ (69), (TA_NULL), (FP)(INT_ENTRY(69, _kernel_inthdr_69)) }
};

#define TNUM_INTNO	1
const uint_t _kernel_tnum_intno = TNUM_INTNO;

const INTINIB _kernel_intinib_table[TNUM_INTNO] = {
	{ (INTNO_SIO), (TA_ENAINT|INTATR_SIO), (INTPRI_SIO) }
};

/*
 *  CPU Exception Handler
 */

#define TNUM_EXCNO	0
const uint_t _kernel_tnum_excno = TNUM_EXCNO;


TOPPERS_EMPTY_LABEL(const EXCINIB, _kernel_excinib_table);

/*
 *  Stack Area for Non-task Context
 */

#ifdef DEFAULT_ISTK

#define TOPPERS_ISTKSZ		DEFAULT_ISTKSZ
#define TOPPERS_ISTK		DEFAULT_ISTK

#else /* DEAULT_ISTK */

static STK_T				_kernel_istack[COUNT_STK_T(DEFAULT_ISTKSZ)];
#define TOPPERS_ISTKSZ		ROUND_STK_T(DEFAULT_ISTKSZ)
#define TOPPERS_ISTK		_kernel_istack

#endif /* DEAULT_ISTK */

const SIZE		_kernel_istksz = TOPPERS_ISTKSZ;
STK_T *const	_kernel_istk = TOPPERS_ISTK;

#ifdef TOPPERS_ISTKPT
STK_T *const	_kernel_istkpt = TOPPERS_ISTKPT(TOPPERS_ISTK, TOPPERS_ISTKSZ);
#endif /* TOPPERS_ISTKPT */

/*
 *  Time Event Management
 */

TMEVTN   _kernel_tmevt_heap[TNUM_TSKID + TNUM_CYCID + TNUM_ALMID];

/*
 *  Module Initialization Function
 */

void
_kernel_initialize_object(void)
{
	_kernel_initialize_task();
	_kernel_initialize_semaphore();
	_kernel_initialize_interrupt();
	_kernel_initialize_exception();
}

/*
 *  Initialization Routine
 */

void
_kernel_call_inirtn(void)
{
	(syslog_initialize)((intptr_t)(0));
	(print_banner)((intptr_t)(0));
	(sio_initialize)((intptr_t)(0));
	(serial_initialize)((intptr_t)(0));
}

/*
 *  Termination Routine
 */

void
_kernel_call_terrtn(void)
{
	(logtask_terminate)((intptr_t)(0));
}

/*
 *  Target-dependent Definitions (ARM-M)
 */



__attribute__ ((section(".vector"))) 
const FP _kernel_vector_table[] =      
 {                                    
	(FP)(TOPPERS_ISTKPT(TOPPERS_ISTK, TOPPERS_ISTKSZ)),   // 0 The initial stack pointer 
	(FP)_start,                 // 1 The reset handler         
 	(FP)(_kernel_exc_entry), /* 2 */
 	(FP)(_kernel_exc_entry), /* 3 */
 	(FP)(_kernel_exc_entry), /* 4 */
 	(FP)(_kernel_exc_entry), /* 5 */
 	(FP)(_kernel_exc_entry), /* 6 */
 	(FP)(_kernel_exc_entry), /* 7 */
 	(FP)(_kernel_exc_entry), /* 8 */
 	(FP)(_kernel_exc_entry), /* 9 */
 	(FP)(_kernel_exc_entry), /* 10 */
 	(FP)(_kernel_svc_handler),      // 11 SVCall handler /* 11 */
 	(FP)(_kernel_exc_entry), /* 12 */
 	(FP)(_kernel_exc_entry), /* 13 */
 	(FP)(_kernel_exc_entry), /* 14 */
 	(FP)(_kernel_int_entry), /* 15 */
 	(FP)(_kernel_int_entry), /* 16 */
 	(FP)(_kernel_int_entry), /* 17 */
 	(FP)(_kernel_int_entry), /* 18 */
 	(FP)(_kernel_int_entry), /* 19 */
 	(FP)(_kernel_int_entry), /* 20 */
 	(FP)(_kernel_int_entry), /* 21 */
 	(FP)(_kernel_int_entry), /* 22 */
 	(FP)(_kernel_int_entry), /* 23 */
 	(FP)(_kernel_int_entry), /* 24 */
 	(FP)(_kernel_int_entry), /* 25 */
 	(FP)(_kernel_int_entry), /* 26 */
 	(FP)(_kernel_int_entry), /* 27 */
 	(FP)(_kernel_int_entry), /* 28 */
 	(FP)(_kernel_int_entry), /* 29 */
 	(FP)(_kernel_int_entry), /* 30 */
 	(FP)(_kernel_int_entry), /* 31 */
 	(FP)(_kernel_int_entry), /* 32 */
 	(FP)(_kernel_int_entry), /* 33 */
 	(FP)(_kernel_int_entry), /* 34 */
 	(FP)(_kernel_int_entry), /* 35 */
 	(FP)(_kernel_int_entry), /* 36 */
 	(FP)(_kernel_int_entry), /* 37 */
 	(FP)(_kernel_int_entry), /* 38 */
 	(FP)(_kernel_int_entry), /* 39 */
 	(FP)(_kernel_int_entry), /* 40 */
 	(FP)(_kernel_int_entry), /* 41 */
 	(FP)(_kernel_int_entry), /* 42 */
 	(FP)(_kernel_int_entry), /* 43 */
 	(FP)(_kernel_int_entry), /* 44 */
 	(FP)(_kernel_int_entry), /* 45 */
 	(FP)(_kernel_int_entry), /* 46 */
 	(FP)(_kernel_int_entry), /* 47 */
 	(FP)(_kernel_int_entry), /* 48 */
 	(FP)(_kernel_int_entry), /* 49 */
 	(FP)(_kernel_int_entry), /* 50 */
 	(FP)(_kernel_int_entry), /* 51 */
 	(FP)(_kernel_int_entry), /* 52 */
 	(FP)(_kernel_int_entry), /* 53 */
 	(FP)(_kernel_int_entry), /* 54 */
 	(FP)(_kernel_int_entry), /* 55 */
 	(FP)(_kernel_int_entry), /* 56 */
 	(FP)(_kernel_int_entry), /* 57 */
 	(FP)(_kernel_int_entry), /* 58 */
 	(FP)(_kernel_int_entry), /* 59 */
 	(FP)(_kernel_int_entry), /* 60 */
 	(FP)(_kernel_int_entry), /* 61 */
 	(FP)(_kernel_int_entry), /* 62 */
 	(FP)(_kernel_int_entry), /* 63 */
 	(FP)(_kernel_int_entry), /* 64 */
 	(FP)(_kernel_int_entry), /* 65 */
 	(FP)(_kernel_int_entry), /* 66 */
 	(FP)(_kernel_int_entry), /* 67 */
 	(FP)(_kernel_int_entry), /* 68 */
 	(FP)(_kernel_int_entry), /* 69 */
 	(FP)(_kernel_int_entry), /* 70 */
 	(FP)(_kernel_int_entry), /* 71 */
 	(FP)(_kernel_int_entry), /* 72 */
 	(FP)(_kernel_int_entry), /* 73 */
 	(FP)(_kernel_int_entry), /* 74 */
 	(FP)(_kernel_int_entry), /* 75 */
 	(FP)(_kernel_int_entry), /* 76 */
 	(FP)(_kernel_int_entry), /* 77 */
 	(FP)(_kernel_int_entry), /* 78 */
 	(FP)(_kernel_int_entry), /* 79 */
 	(FP)(_kernel_int_entry), /* 80 */
 	(FP)(_kernel_int_entry), /* 81 */
 	(FP)(_kernel_int_entry), /* 82 */
 	(FP)(_kernel_int_entry), /* 83 */
 	(FP)(_kernel_int_entry), /* 84 */
 	(FP)(_kernel_int_entry), /* 85 */
 	(FP)(_kernel_int_entry), /* 86 */
 	(FP)(_kernel_int_entry), /* 87 */
 	(FP)(_kernel_int_entry), /* 88 */
 	(FP)(_kernel_int_entry), /* 89 */
 	(FP)(_kernel_int_entry), /* 90 */
 	(FP)(_kernel_int_entry), /* 91 */
 	(FP)(_kernel_int_entry), /* 92 */
 	(FP)(_kernel_int_entry), /* 93 */
 	(FP)(_kernel_int_entry), /* 94 */
 	(FP)(_kernel_int_entry), /* 95 */
 	(FP)(_kernel_int_entry), /* 96 */
 	(FP)(_kernel_int_entry), /* 97 */
 	(FP)(_kernel_int_entry), /* 98 */
 	(FP)(_kernel_int_entry), /* 99 */
 	(FP)(_kernel_int_entry), /* 100 */
 	(FP)(_kernel_int_entry), /* 101 */
 	(FP)(_kernel_int_entry), /* 102 */
 	(FP)(_kernel_int_entry), /* 103 */
 	(FP)(_kernel_int_entry), /* 104 */
 	(FP)(_kernel_int_entry), /* 105 */
 	(FP)(_kernel_int_entry), /* 106 */
 	(FP)(_kernel_int_entry), /* 107 */
 	(FP)(_kernel_int_entry), /* 108 */
 	(FP)(_kernel_int_entry), /* 109 */
 	(FP)(_kernel_int_entry), /* 110 */
 	(FP)(_kernel_int_entry), /* 111 */
 	(FP)(_kernel_int_entry), /* 112 */
 	(FP)(_kernel_int_entry), /* 113 */
 	(FP)(_kernel_int_entry), /* 114 */
 	(FP)(_kernel_int_entry), /* 115 */
 	(FP)(_kernel_int_entry), /* 116 */
 	(FP)(_kernel_int_entry), /* 117 */
 	(FP)(_kernel_int_entry), /* 118 */
 	(FP)(_kernel_int_entry), /* 119 */
 	(FP)(_kernel_int_entry), /* 120 */
 	(FP)(_kernel_int_entry), /* 121 */
 	(FP)(_kernel_int_entry), /* 122 */
 	(FP)(_kernel_int_entry), /* 123 */
 	(FP)(_kernel_int_entry), /* 124 */
 	(FP)(_kernel_int_entry), /* 125 */
 	(FP)(_kernel_int_entry), /* 126 */
 	(FP)(_kernel_int_entry), /* 127 */
 	(FP)(_kernel_int_entry), /* 128 */
 	(FP)(_kernel_int_entry), /* 129 */
 	(FP)(_kernel_int_entry), /* 130 */
 	(FP)(_kernel_int_entry), /* 131 */
 	(FP)(_kernel_int_entry), /* 132 */
 	(FP)(_kernel_int_entry), /* 133 */
 	(FP)(_kernel_int_entry), /* 134 */
 	(FP)(_kernel_int_entry), /* 135 */
 	(FP)(_kernel_int_entry), /* 136 */
 	(FP)(_kernel_int_entry), /* 137 */
 	(FP)(_kernel_int_entry), /* 138 */
 	(FP)(_kernel_int_entry), /* 139 */
 	(FP)(_kernel_int_entry), /* 140 */
 	(FP)(_kernel_int_entry), /* 141 */
 	(FP)(_kernel_int_entry), /* 142 */
 	(FP)(_kernel_int_entry), /* 143 */
 	(FP)(_kernel_int_entry), /* 144 */
 	(FP)(_kernel_int_entry), /* 145 */
 	(FP)(_kernel_int_entry), /* 146 */
 	(FP)(_kernel_int_entry), /* 147 */
 	(FP)(_kernel_int_entry), /* 148 */
 	(FP)(_kernel_int_entry), /* 149 */
 	(FP)(_kernel_int_entry), /* 150 */
 	(FP)(_kernel_int_entry), /* 151 */
 	(FP)(_kernel_int_entry), /* 152 */
 	(FP)(_kernel_int_entry), /* 153 */
 	(FP)(_kernel_int_entry), /* 154 */
 	(FP)(_kernel_int_entry), /* 155 */
 	(FP)(_kernel_int_entry), /* 156 */
 	(FP)(_kernel_int_entry), /* 157 */
 	(FP)(_kernel_int_entry), /* 158 */
 	(FP)(_kernel_int_entry), /* 159 */
 	(FP)(_kernel_int_entry), /* 160 */
 	(FP)(_kernel_int_entry), /* 161 */
 	(FP)(_kernel_int_entry), /* 162 */
 	(FP)(_kernel_int_entry), /* 163 */
 	(FP)(_kernel_int_entry), /* 164 */
 	(FP)(_kernel_int_entry), /* 165 */
 	(FP)(_kernel_int_entry), /* 166 */
 	(FP)(_kernel_int_entry), /* 167 */
 	(FP)(_kernel_int_entry), /* 168 */
 	(FP)(_kernel_int_entry), /* 169 */
 	(FP)(_kernel_int_entry), /* 170 */
 	(FP)(_kernel_int_entry), /* 171 */
 	(FP)(_kernel_int_entry), /* 172 */
 	(FP)(_kernel_int_entry), /* 173 */
 	(FP)(_kernel_int_entry), /* 174 */
 	(FP)(_kernel_int_entry), /* 175 */
 	(FP)(_kernel_int_entry), /* 176 */
 	(FP)(_kernel_int_entry), /* 177 */
 	(FP)(_kernel_int_entry), /* 178 */
 	(FP)(_kernel_int_entry), /* 179 */
 	(FP)(_kernel_int_entry), /* 180 */
 	(FP)(_kernel_int_entry), /* 181 */
 	(FP)(_kernel_int_entry), /* 182 */
 	(FP)(_kernel_int_entry), /* 183 */
 	(FP)(_kernel_int_entry), /* 184 */
 	(FP)(_kernel_int_entry), /* 185 */
 	(FP)(_kernel_int_entry), /* 186 */
 	(FP)(_kernel_int_entry), /* 187 */
 	(FP)(_kernel_int_entry), /* 188 */
 	(FP)(_kernel_int_entry), /* 189 */
 	(FP)(_kernel_int_entry), /* 190 */
 	(FP)(_kernel_int_entry), /* 191 */
 	(FP)(_kernel_int_entry), /* 192 */
 	(FP)(_kernel_int_entry), /* 193 */
 	(FP)(_kernel_int_entry), /* 194 */
 	(FP)(_kernel_int_entry), /* 195 */
 	(FP)(_kernel_int_entry), /* 196 */
 	(FP)(_kernel_int_entry), /* 197 */
 	(FP)(_kernel_int_entry), /* 198 */
 	(FP)(_kernel_int_entry), /* 199 */
 	(FP)(_kernel_int_entry), /* 200 */
 	(FP)(_kernel_int_entry), /* 201 */
 	(FP)(_kernel_int_entry), /* 202 */
 	(FP)(_kernel_int_entry), /* 203 */
 	(FP)(_kernel_int_entry), /* 204 */
 	(FP)(_kernel_int_entry), /* 205 */
 	(FP)(_kernel_int_entry), /* 206 */
 	(FP)(_kernel_int_entry), /* 207 */
 	(FP)(_kernel_int_entry), /* 208 */
 	(FP)(_kernel_int_entry), /* 209 */
 	(FP)(_kernel_int_entry), /* 210 */
 	(FP)(_kernel_int_entry), /* 211 */
 	(FP)(_kernel_int_entry), /* 212 */
 	(FP)(_kernel_int_entry), /* 213 */
 	(FP)(_kernel_int_entry), /* 214 */
 	(FP)(_kernel_int_entry), /* 215 */
 	(FP)(_kernel_int_entry), /* 216 */
 	(FP)(_kernel_int_entry), /* 217 */
 	(FP)(_kernel_int_entry), /* 218 */
 	(FP)(_kernel_int_entry), /* 219 */
 	(FP)(_kernel_int_entry), /* 220 */
 	(FP)(_kernel_int_entry), /* 221 */
 	(FP)(_kernel_int_entry), /* 222 */
 	(FP)(_kernel_int_entry), /* 223 */
 	(FP)(_kernel_int_entry), /* 224 */
 	(FP)(_kernel_int_entry), /* 225 */
 	(FP)(_kernel_int_entry), /* 226 */
 	(FP)(_kernel_int_entry), /* 227 */
 	(FP)(_kernel_int_entry), /* 228 */
 	(FP)(_kernel_int_entry), /* 229 */
 	(FP)(_kernel_int_entry), /* 230 */
 	(FP)(_kernel_int_entry), /* 231 */
 	(FP)(_kernel_int_entry), /* 232 */
 	(FP)(_kernel_int_entry), /* 233 */
 	(FP)(_kernel_int_entry), /* 234 */
 	(FP)(_kernel_int_entry), /* 235 */
 	(FP)(_kernel_int_entry), /* 236 */
 	(FP)(_kernel_int_entry), /* 237 */
 	(FP)(_kernel_int_entry), /* 238 */
 	(FP)(_kernel_int_entry), /* 239 */
 	(FP)(_kernel_int_entry), /* 240 */
 	(FP)(_kernel_int_entry), /* 241 */
 	(FP)(_kernel_int_entry), /* 242 */
 	(FP)(_kernel_int_entry), /* 243 */
 	(FP)(_kernel_int_entry), /* 244 */
 	(FP)(_kernel_int_entry), /* 245 */
 	(FP)(_kernel_int_entry), /* 246 */
 	(FP)(_kernel_int_entry), /* 247 */
 	(FP)(_kernel_int_entry), /* 248 */
 	(FP)(_kernel_int_entry), /* 249 */
 	(FP)(_kernel_int_entry), /* 250 */
 	(FP)(_kernel_int_entry), /* 251 */
 	(FP)(_kernel_int_entry), /* 252 */
 	(FP)(_kernel_int_entry), /* 253 */
 	(FP)(_kernel_int_entry), /* 254 */
 	(FP)(_kernel_int_entry), /* 255 */

};


const FP _kernel_exc_tbl[] = 
{
	(FP)(_kernel_default_exc_handler), /* 0 */
	(FP)(_kernel_default_exc_handler), /* 1 */
	(FP)(_kernel_default_exc_handler), /* 2 */
	(FP)(_kernel_default_exc_handler), /* 3 */
	(FP)(_kernel_default_exc_handler), /* 4 */
	(FP)(_kernel_default_exc_handler), /* 5 */
	(FP)(_kernel_default_exc_handler), /* 6 */
	(FP)(_kernel_default_exc_handler), /* 7 */
	(FP)(_kernel_default_exc_handler), /* 8 */
	(FP)(_kernel_default_exc_handler), /* 9 */
	(FP)(_kernel_default_exc_handler), /* 10 */
	(FP)(_kernel_default_exc_handler), /* 11 */
	(FP)(_kernel_default_exc_handler), /* 12 */
	(FP)(_kernel_default_exc_handler), /* 13 */
	(FP)(_kernel_default_exc_handler), /* 14 */
	(FP)(_kernel_default_int_handler), /* 15 */
	(FP)(_kernel_default_int_handler), /* 16 */
	(FP)(_kernel_default_int_handler), /* 17 */
	(FP)(_kernel_default_int_handler), /* 18 */
	(FP)(_kernel_default_int_handler), /* 19 */
	(FP)(_kernel_default_int_handler), /* 20 */
	(FP)(_kernel_default_int_handler), /* 21 */
	(FP)(_kernel_default_int_handler), /* 22 */
	(FP)(_kernel_default_int_handler), /* 23 */
	(FP)(_kernel_default_int_handler), /* 24 */
	(FP)(_kernel_default_int_handler), /* 25 */
	(FP)(_kernel_default_int_handler), /* 26 */
	(FP)(_kernel_default_int_handler), /* 27 */
	(FP)(_kernel_default_int_handler), /* 28 */
	(FP)(_kernel_default_int_handler), /* 29 */
	(FP)(_kernel_default_int_handler), /* 30 */
	(FP)(_kernel_default_int_handler), /* 31 */
	(FP)(_kernel_default_int_handler), /* 32 */
	(FP)(_kernel_default_int_handler), /* 33 */
	(FP)(_kernel_default_int_handler), /* 34 */
	(FP)(_kernel_default_int_handler), /* 35 */
	(FP)(_kernel_default_int_handler), /* 36 */
	(FP)(_kernel_default_int_handler), /* 37 */
	(FP)(_kernel_default_int_handler), /* 38 */
	(FP)(_kernel_default_int_handler), /* 39 */
	(FP)(_kernel_default_int_handler), /* 40 */
	(FP)(_kernel_default_int_handler), /* 41 */
	(FP)(_kernel_default_int_handler), /* 42 */
	(FP)(_kernel_default_int_handler), /* 43 */
	(FP)(_kernel_default_int_handler), /* 44 */
	(FP)(_kernel_default_int_handler), /* 45 */
	(FP)(_kernel_default_int_handler), /* 46 */
	(FP)(_kernel_default_int_handler), /* 47 */
	(FP)(_kernel_default_int_handler), /* 48 */
	(FP)(_kernel_default_int_handler), /* 49 */
	(FP)(_kernel_default_int_handler), /* 50 */
	(FP)(_kernel_default_int_handler), /* 51 */
	(FP)(_kernel_default_int_handler), /* 52 */
	(FP)(_kernel_default_int_handler), /* 53 */
	(FP)(_kernel_default_int_handler), /* 54 */
	(FP)(_kernel_default_int_handler), /* 55 */
	(FP)(_kernel_default_int_handler), /* 56 */
	(FP)(_kernel_default_int_handler), /* 57 */
	(FP)(_kernel_default_int_handler), /* 58 */
	(FP)(_kernel_default_int_handler), /* 59 */
	(FP)(_kernel_default_int_handler), /* 60 */
	(FP)(_kernel_default_int_handler), /* 61 */
	(FP)(_kernel_default_int_handler), /* 62 */
	(FP)(_kernel_default_int_handler), /* 63 */
	(FP)(_kernel_default_int_handler), /* 64 */
	(FP)(_kernel_default_int_handler), /* 65 */
	(FP)(_kernel_default_int_handler), /* 66 */
	(FP)(_kernel_default_int_handler), /* 67 */
	(FP)(_kernel_default_int_handler), /* 68 */
	(FP)(_kernel_inthdr_69), /* 69 */
	(FP)(_kernel_default_int_handler), /* 70 */
	(FP)(_kernel_default_int_handler), /* 71 */
	(FP)(_kernel_default_int_handler), /* 72 */
	(FP)(_kernel_default_int_handler), /* 73 */
	(FP)(_kernel_default_int_handler), /* 74 */
	(FP)(_kernel_default_int_handler), /* 75 */
	(FP)(_kernel_default_int_handler), /* 76 */
	(FP)(_kernel_default_int_handler), /* 77 */
	(FP)(_kernel_default_int_handler), /* 78 */
	(FP)(_kernel_default_int_handler), /* 79 */
	(FP)(_kernel_default_int_handler), /* 80 */
	(FP)(_kernel_default_int_handler), /* 81 */
	(FP)(_kernel_default_int_handler), /* 82 */
	(FP)(_kernel_default_int_handler), /* 83 */
	(FP)(_kernel_default_int_handler), /* 84 */
	(FP)(_kernel_default_int_handler), /* 85 */
	(FP)(_kernel_default_int_handler), /* 86 */
	(FP)(_kernel_default_int_handler), /* 87 */
	(FP)(_kernel_default_int_handler), /* 88 */
	(FP)(_kernel_default_int_handler), /* 89 */
	(FP)(_kernel_default_int_handler), /* 90 */
	(FP)(_kernel_default_int_handler), /* 91 */
	(FP)(_kernel_default_int_handler), /* 92 */
	(FP)(_kernel_default_int_handler), /* 93 */
	(FP)(_kernel_default_int_handler), /* 94 */
	(FP)(_kernel_default_int_handler), /* 95 */
	(FP)(_kernel_default_int_handler), /* 96 */
	(FP)(_kernel_default_int_handler), /* 97 */
	(FP)(_kernel_default_int_handler), /* 98 */
	(FP)(_kernel_default_int_handler), /* 99 */
	(FP)(_kernel_default_int_handler), /* 100 */
	(FP)(_kernel_default_int_handler), /* 101 */
	(FP)(_kernel_default_int_handler), /* 102 */
	(FP)(_kernel_default_int_handler), /* 103 */
	(FP)(_kernel_default_int_handler), /* 104 */
	(FP)(_kernel_default_int_handler), /* 105 */
	(FP)(_kernel_default_int_handler), /* 106 */
	(FP)(_kernel_default_int_handler), /* 107 */
	(FP)(_kernel_default_int_handler), /* 108 */
	(FP)(_kernel_default_int_handler), /* 109 */
	(FP)(_kernel_default_int_handler), /* 110 */
	(FP)(_kernel_default_int_handler), /* 111 */
	(FP)(_kernel_default_int_handler), /* 112 */
	(FP)(_kernel_default_int_handler), /* 113 */
	(FP)(_kernel_default_int_handler), /* 114 */
	(FP)(_kernel_default_int_handler), /* 115 */
	(FP)(_kernel_default_int_handler), /* 116 */
	(FP)(_kernel_default_int_handler), /* 117 */
	(FP)(_kernel_default_int_handler), /* 118 */
	(FP)(_kernel_default_int_handler), /* 119 */
	(FP)(_kernel_default_int_handler), /* 120 */
	(FP)(_kernel_default_int_handler), /* 121 */
	(FP)(_kernel_default_int_handler), /* 122 */
	(FP)(_kernel_default_int_handler), /* 123 */
	(FP)(_kernel_default_int_handler), /* 124 */
	(FP)(_kernel_default_int_handler), /* 125 */
	(FP)(_kernel_default_int_handler), /* 126 */
	(FP)(_kernel_default_int_handler), /* 127 */
	(FP)(_kernel_default_int_handler), /* 128 */
	(FP)(_kernel_default_int_handler), /* 129 */
	(FP)(_kernel_default_int_handler), /* 130 */
	(FP)(_kernel_default_int_handler), /* 131 */
	(FP)(_kernel_default_int_handler), /* 132 */
	(FP)(_kernel_default_int_handler), /* 133 */
	(FP)(_kernel_default_int_handler), /* 134 */
	(FP)(_kernel_default_int_handler), /* 135 */
	(FP)(_kernel_default_int_handler), /* 136 */
	(FP)(_kernel_default_int_handler), /* 137 */
	(FP)(_kernel_default_int_handler), /* 138 */
	(FP)(_kernel_default_int_handler), /* 139 */
	(FP)(_kernel_default_int_handler), /* 140 */
	(FP)(_kernel_default_int_handler), /* 141 */
	(FP)(_kernel_default_int_handler), /* 142 */
	(FP)(_kernel_default_int_handler), /* 143 */
	(FP)(_kernel_default_int_handler), /* 144 */
	(FP)(_kernel_default_int_handler), /* 145 */
	(FP)(_kernel_default_int_handler), /* 146 */
	(FP)(_kernel_default_int_handler), /* 147 */
	(FP)(_kernel_default_int_handler), /* 148 */
	(FP)(_kernel_default_int_handler), /* 149 */
	(FP)(_kernel_default_int_handler), /* 150 */
	(FP)(_kernel_default_int_handler), /* 151 */
	(FP)(_kernel_default_int_handler), /* 152 */
	(FP)(_kernel_default_int_handler), /* 153 */
	(FP)(_kernel_default_int_handler), /* 154 */
	(FP)(_kernel_default_int_handler), /* 155 */
	(FP)(_kernel_default_int_handler), /* 156 */
	(FP)(_kernel_default_int_handler), /* 157 */
	(FP)(_kernel_default_int_handler), /* 158 */
	(FP)(_kernel_default_int_handler), /* 159 */
	(FP)(_kernel_default_int_handler), /* 160 */
	(FP)(_kernel_default_int_handler), /* 161 */
	(FP)(_kernel_default_int_handler), /* 162 */
	(FP)(_kernel_default_int_handler), /* 163 */
	(FP)(_kernel_default_int_handler), /* 164 */
	(FP)(_kernel_default_int_handler), /* 165 */
	(FP)(_kernel_default_int_handler), /* 166 */
	(FP)(_kernel_default_int_handler), /* 167 */
	(FP)(_kernel_default_int_handler), /* 168 */
	(FP)(_kernel_default_int_handler), /* 169 */
	(FP)(_kernel_default_int_handler), /* 170 */
	(FP)(_kernel_default_int_handler), /* 171 */
	(FP)(_kernel_default_int_handler), /* 172 */
	(FP)(_kernel_default_int_handler), /* 173 */
	(FP)(_kernel_default_int_handler), /* 174 */
	(FP)(_kernel_default_int_handler), /* 175 */
	(FP)(_kernel_default_int_handler), /* 176 */
	(FP)(_kernel_default_int_handler), /* 177 */
	(FP)(_kernel_default_int_handler), /* 178 */
	(FP)(_kernel_default_int_handler), /* 179 */
	(FP)(_kernel_default_int_handler), /* 180 */
	(FP)(_kernel_default_int_handler), /* 181 */
	(FP)(_kernel_default_int_handler), /* 182 */
	(FP)(_kernel_default_int_handler), /* 183 */
	(FP)(_kernel_default_int_handler), /* 184 */
	(FP)(_kernel_default_int_handler), /* 185 */
	(FP)(_kernel_default_int_handler), /* 186 */
	(FP)(_kernel_default_int_handler), /* 187 */
	(FP)(_kernel_default_int_handler), /* 188 */
	(FP)(_kernel_default_int_handler), /* 189 */
	(FP)(_kernel_default_int_handler), /* 190 */
	(FP)(_kernel_default_int_handler), /* 191 */
	(FP)(_kernel_default_int_handler), /* 192 */
	(FP)(_kernel_default_int_handler), /* 193 */
	(FP)(_kernel_default_int_handler), /* 194 */
	(FP)(_kernel_default_int_handler), /* 195 */
	(FP)(_kernel_default_int_handler), /* 196 */
	(FP)(_kernel_default_int_handler), /* 197 */
	(FP)(_kernel_default_int_handler), /* 198 */
	(FP)(_kernel_default_int_handler), /* 199 */
	(FP)(_kernel_default_int_handler), /* 200 */
	(FP)(_kernel_default_int_handler), /* 201 */
	(FP)(_kernel_default_int_handler), /* 202 */
	(FP)(_kernel_default_int_handler), /* 203 */
	(FP)(_kernel_default_int_handler), /* 204 */
	(FP)(_kernel_default_int_handler), /* 205 */
	(FP)(_kernel_default_int_handler), /* 206 */
	(FP)(_kernel_default_int_handler), /* 207 */
	(FP)(_kernel_default_int_handler), /* 208 */
	(FP)(_kernel_default_int_handler), /* 209 */
	(FP)(_kernel_default_int_handler), /* 210 */
	(FP)(_kernel_default_int_handler), /* 211 */
	(FP)(_kernel_default_int_handler), /* 212 */
	(FP)(_kernel_default_int_handler), /* 213 */
	(FP)(_kernel_default_int_handler), /* 214 */
	(FP)(_kernel_default_int_handler), /* 215 */
	(FP)(_kernel_default_int_handler), /* 216 */
	(FP)(_kernel_default_int_handler), /* 217 */
	(FP)(_kernel_default_int_handler), /* 218 */
	(FP)(_kernel_default_int_handler), /* 219 */
	(FP)(_kernel_default_int_handler), /* 220 */
	(FP)(_kernel_default_int_handler), /* 221 */
	(FP)(_kernel_default_int_handler), /* 222 */
	(FP)(_kernel_default_int_handler), /* 223 */
	(FP)(_kernel_default_int_handler), /* 224 */
	(FP)(_kernel_default_int_handler), /* 225 */
	(FP)(_kernel_default_int_handler), /* 226 */
	(FP)(_kernel_default_int_handler), /* 227 */
	(FP)(_kernel_default_int_handler), /* 228 */
	(FP)(_kernel_default_int_handler), /* 229 */
	(FP)(_kernel_default_int_handler), /* 230 */
	(FP)(_kernel_default_int_handler), /* 231 */
	(FP)(_kernel_default_int_handler), /* 232 */
	(FP)(_kernel_default_int_handler), /* 233 */
	(FP)(_kernel_default_int_handler), /* 234 */
	(FP)(_kernel_default_int_handler), /* 235 */
	(FP)(_kernel_default_int_handler), /* 236 */
	(FP)(_kernel_default_int_handler), /* 237 */
	(FP)(_kernel_default_int_handler), /* 238 */
	(FP)(_kernel_default_int_handler), /* 239 */
	(FP)(_kernel_default_int_handler), /* 240 */
	(FP)(_kernel_default_int_handler), /* 241 */
	(FP)(_kernel_default_int_handler), /* 242 */
	(FP)(_kernel_default_int_handler), /* 243 */
	(FP)(_kernel_default_int_handler), /* 244 */
	(FP)(_kernel_default_int_handler), /* 245 */
	(FP)(_kernel_default_int_handler), /* 246 */
	(FP)(_kernel_default_int_handler), /* 247 */
	(FP)(_kernel_default_int_handler), /* 248 */
	(FP)(_kernel_default_int_handler), /* 249 */
	(FP)(_kernel_default_int_handler), /* 250 */
	(FP)(_kernel_default_int_handler), /* 251 */
	(FP)(_kernel_default_int_handler), /* 252 */
	(FP)(_kernel_default_int_handler), /* 253 */
	(FP)(_kernel_default_int_handler), /* 254 */
	(FP)(_kernel_default_int_handler), /* 255 */

};

const uint32_t _kernel_bitpat_cfgint[16] = {
	UINT32_C(0x00000000), 
	UINT32_C(0x00000000), 
	UINT32_C(0x00000020), 
	UINT32_C(0x00000000), 
	UINT32_C(0x00000000), 
	UINT32_C(0x00000000), 
	UINT32_C(0x00000000), 
	UINT32_C(0x00000000), 
	UINT32_C(0x00000000), 
	UINT32_C(0x00000000), 
	UINT32_C(0x00000000), 
	UINT32_C(0x00000000), 
	UINT32_C(0x00000000), 
	UINT32_C(0x00000000), 
	UINT32_C(0x00000000), 
	UINT32_C(0x00000000), 

};

